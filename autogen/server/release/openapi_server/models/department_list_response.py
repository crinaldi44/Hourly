# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.department import Department
from openapi_server import util

from openapi_server.models.department import Department  # noqa: E501

class DepartmentListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, departments=None):  # noqa: E501
        """DepartmentListResponse - a model defined in OpenAPI

        :param departments: The departments of this DepartmentListResponse.  # noqa: E501
        :type departments: List[Department]
        """
        self.openapi_types = {
            'departments': List[Department]
        }

        self.attribute_map = {
            'departments': 'departments'
        }

        self.departments = departments

    @classmethod
    def from_dict(cls, dikt) -> 'DepartmentListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DepartmentListResponse of this DepartmentListResponse.  # noqa: E501
        :rtype: DepartmentListResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def departments(self):
        """Gets the departments of this DepartmentListResponse.


        :return: The departments of this DepartmentListResponse.
        :rtype: List[Department]
        """
        return self._departments

    @departments.setter
    def departments(self, departments):
        """Sets the departments of this DepartmentListResponse.


        :param departments: The departments of this DepartmentListResponse.
        :type departments: List[Department]
        """
        if departments is None:
            raise ValueError("Invalid value for `departments`, must not be `None`")  # noqa: E501

        self._departments = departments

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Clockin(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, in_time=None, out_time=None):  # noqa: E501
        """Clockin - a model defined in OpenAPI

        :param in_time: The in_time of this Clockin.  # noqa: E501
        :type in_time: object
        :param out_time: The out_time of this Clockin.  # noqa: E501
        :type out_time: object
        """
        self.openapi_types = {
            'in_time': object,
            'out_time': object
        }

        self.attribute_map = {
            'in_time': 'in_time',
            'out_time': 'out_time'
        }

        self.in_time = in_time
        self.out_time = out_time

    @classmethod
    def from_dict(cls, dikt) -> 'Clockin':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Clockin of this Clockin.  # noqa: E501
        :rtype: Clockin
        """
        return util.deserialize_model(dikt, cls)

    @property
    def in_time(self):
        """Gets the in_time of this Clockin.


        :return: The in_time of this Clockin.
        :rtype: object
        """
        return self._in_time

    @in_time.setter
    def in_time(self, in_time):
        """Sets the in_time of this Clockin.


        :param in_time: The in_time of this Clockin.
        :type in_time: object
        """
        if in_time is None:
            raise ValueError("Invalid value for `in_time`, must not be `None`")  # noqa: E501

        self._in_time = in_time

    @property
    def out_time(self):
        """Gets the out_time of this Clockin.


        :return: The out_time of this Clockin.
        :rtype: object
        """
        return self._out_time

    @out_time.setter
    def out_time(self, out_time):
        """Sets the out_time of this Clockin.


        :param out_time: The out_time of this Clockin.
        :type out_time: object
        """

        self._out_time = out_time

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.role import Role
from openapi_server import util

from openapi_server.models.role import Role  # noqa: E501

class RoleListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, roles=None):  # noqa: E501
        """RoleListResponse - a model defined in OpenAPI

        :param roles: The roles of this RoleListResponse.  # noqa: E501
        :type roles: List[Role]
        """
        self.openapi_types = {
            'roles': List[Role]
        }

        self.attribute_map = {
            'roles': 'roles'
        }

        self.roles = roles

    @classmethod
    def from_dict(cls, dikt) -> 'RoleListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RoleListResponse of this RoleListResponse.  # noqa: E501
        :rtype: RoleListResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def roles(self):
        """Gets the roles of this RoleListResponse.


        :return: The roles of this RoleListResponse.
        :rtype: List[Role]
        """
        return self._roles

    @roles.setter
    def roles(self, roles):
        """Sets the roles of this RoleListResponse.


        :param roles: The roles of this RoleListResponse.
        :type roles: List[Role]
        """
        if roles is None:
            raise ValueError("Invalid value for `roles`, must not be `None`")  # noqa: E501

        self._roles = roles

openapi: 3.0.2
info:
  contact:
    email: test@test.com
    name: Hourly
    url: http://www.hourly.com
  description: Provides interaction with Hourly web app.
  license:
    name: GNU
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  termsOfService: http://api.hourly.com/terms
  title: Hourly API
  version: "0.1"
servers:
- description: Local
  url: http://localhost:8080/api/v0
- description: Production
  url: http://api.hourly.com/v0
- description: Alpha
  url: http://api.hourly.com/alpha/v0
tags:
- description: Durations of time that an employee has worked.
  name: Clockins
- description: Groupings of users within the cloud.
  name: Companies
- description: Subdivisions of companies.
  name: Departments
- description: Instantiations of packages.
  name: Events
- description: Event types created by companies.
  name: Packages
- description: Roles that users can have in the Hourly cloud.
  name: Roles
paths:
  /clockins:
    get:
      operationId: list_clockins
      parameters:
      - description: default query parameter
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: include the total count in the response
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: string
        style: form
      - description: The page to query from. This will take precedence over a limit
          and offset.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: "Fields to exclude {\"measurements\": 0} or only include {\"\
          measurements\": 1}"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "comma-separated list of fields to define the sort order. To\
          \ indicate sorting direction, may be prefixed with + (ascending) or - (descending),\
          \ e.g. /sales-orders?sort=+id"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: numeric offset of the first element on a page
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: client suggested limit to restrict the number of entries on a
          page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "language code to prefer for document elements (en-US, fr ...)\
          \ page"
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockinListResponse'
          description: Successully retrieved list of clockins.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: List Clockins
      tags:
      - Clockins
      x-openapi-router-controller: domains.clockins.controllers.get.controller
    post:
      description: "Clocks the user in or out, depending on whether they have active\
        \ clockins."
      operationId: add_clockin
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clockin'
          description: clockin added
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Add Clockin
      tags:
      - Clockins
      x-openapi-router-controller: domains.clockins.controllers.post.controller
  /clockins/{id}:
    delete:
      operationId: delete_clockin
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Clockin deleted
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Delete Clockin
      tags:
      - Clockins
      x-openapi-router-controller: domains.clockins.controllers.delete.controller
    patch:
      operationId: patch_clockin
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchDocument'
              type: array
        required: true
      responses:
        "204":
          description: Clockin patched
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Patch Clockin
      tags:
      - Clockins
      x-openapi-router-controller: domains.clockins.controllers.patch.controller
  /companies:
    get:
      operationId: list_companies
      parameters:
      - description: default query parameter
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: include the total count in the response
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: string
        style: form
      - description: The page to query from. This will take precedence over a limit
          and offset.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: "Fields to exclude {\"measurements\": 0} or only include {\"\
          measurements\": 1}"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "comma-separated list of fields to define the sort order. To\
          \ indicate sorting direction, may be prefixed with + (ascending) or - (descending),\
          \ e.g. /sales-orders?sort=+id"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: numeric offset of the first element on a page
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: client suggested limit to restrict the number of entries on a
          page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "language code to prefer for document elements (en-US, fr ...)\
          \ page"
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListResponse'
          description: Successully retrieved list of companies.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: List Companies
      tags:
      - Companies
      x-openapi-router-controller: domains.companies.controllers.get.controller
    post:
      operationId: add_company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        description: Add Company
        required: true
        x-body-name: company
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: company added
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Add Company
      tags:
      - Companies
      x-openapi-router-controller: domains.companies.controllers.post.controller
  /companies/{id}:
    delete:
      operationId: delete_company
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Company deleted
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Delete Company
      tags:
      - Companies
      x-openapi-router-controller: domains.companies.controllers.delete.controller
    get:
      operationId: get_company
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successfully deleted Company
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Delete Company
      tags:
      - Companies
      x-openapi-router-controller: domains.companies.controllers.get.controller
    patch:
      operationId: patch_company
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchDocument'
              type: array
        required: true
        x-body-name: patch_document_list
      responses:
        "204":
          description: Company patched
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Patch Company
      tags:
      - Companies
      x-openapi-router-controller: domains.companies.controllers.patch.controller
  /departments:
    get:
      operationId: list_departments
      parameters:
      - description: default query parameter
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: include the total count in the response
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: string
        style: form
      - description: The page to query from. This will take precedence over a limit
          and offset.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: "Fields to exclude {\"measurements\": 0} or only include {\"\
          measurements\": 1}"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "comma-separated list of fields to define the sort order. To\
          \ indicate sorting direction, may be prefixed with + (ascending) or - (descending),\
          \ e.g. /sales-orders?sort=+id"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: numeric offset of the first element on a page
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: client suggested limit to restrict the number of entries on a
          page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "language code to prefer for document elements (en-US, fr ...)\
          \ page"
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentListResponse'
          description: Successully retrieved list of departments.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: List Departments
      tags:
      - Departments
      x-openapi-router-controller: domains.departments.controllers.get.controller
    post:
      operationId: add_department
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
        description: Add Department
        required: true
        x-body-name: department
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: department added
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Add Department
      tags:
      - Departments
      x-openapi-router-controller: domains.departments.controllers.post.controller
  /departments/{id}:
    delete:
      operationId: delete_department
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Department deleted
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Delete Department
      tags:
      - Departments
      x-openapi-router-controller: domains.departments.controllers.delete.controller
    get:
      operationId: get_department
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successfully retrieved Department
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Get Department
      tags:
      - Departments
      x-openapi-router-controller: domains.departments.controllers.get.controller
    patch:
      operationId: patch_department
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchDocument'
              type: array
        required: true
        x-body-name: patch_document_list
      responses:
        "204":
          description: Department patched
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Patch Department
      tags:
      - Departments
      x-openapi-router-controller: domains.departments.controllers.patch.controller
  /employees:
    get:
      operationId: list_users
      parameters:
      - description: default query parameter
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: include the total count in the response
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: string
        style: form
      - description: The page to query from. This will take precedence over a limit
          and offset.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: "Fields to exclude {\"measurements\": 0} or only include {\"\
          measurements\": 1}"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "comma-separated list of fields to define the sort order. To\
          \ indicate sorting direction, may be prefixed with + (ascending) or - (descending),\
          \ e.g. /sales-orders?sort=+id"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: numeric offset of the first element on a page
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: client suggested limit to restrict the number of entries on a
          page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "language code to prefer for document elements (en-US, fr ...)\
          \ page"
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
          description: Successully retrieved list of users.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: List Employees
      tags:
      - Employees
      x-openapi-router-controller: domains.employees.controllers.get.controller
    post:
      operationId: add_employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        x-body-name: employee
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: User registration successful!
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Add Employee
      tags:
      - Employees
      x-openapi-router-controller: domains.employees.controllers.post.controller
  /employees/login:
    post:
      operationId: authenticate_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
          description: Login successful
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      summary: Login User
      tags:
      - Employees
      x-openapi-router-controller: domains.employees.controllers.post.controller
  /employees/validate:
    post:
      operationId: validate_employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserValidationListResponse'
        x-body-name: employee_validations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidationListResponse'
          description: User validation successful
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Validate Employees
      tags:
      - Employees
      x-openapi-router-controller: domains.employees.controllers.post.controller
  /employees/{id}:
    delete:
      operationId: delete_employee
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Employee deleted
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Delete Employee
      tags:
      - Employees
      x-openapi-router-controller: domains.employees.controllers.delete.controller
    get:
      operationId: get_employee
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successfully retrieved Employee
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Get Employee
      tags:
      - Employees
      x-openapi-router-controller: domains.employees.controllers.get.controller
    patch:
      operationId: patch_employee
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchDocument'
              type: array
        required: true
      responses:
        "204":
          description: Employee patched
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Patch Employee
      tags:
      - Employees
      x-openapi-router-controller: domains.employees.controllers.patch.controller
  /events:
    get:
      operationId: list_events
      parameters:
      - description: default query parameter
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: include the total count in the response
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: string
        style: form
      - description: The page to query from. This will take precedence over a limit
          and offset.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: "Fields to exclude {\"measurements\": 0} or only include {\"\
          measurements\": 1}"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "comma-separated list of fields to define the sort order. To\
          \ indicate sorting direction, may be prefixed with + (ascending) or - (descending),\
          \ e.g. /sales-orders?sort=+id"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: numeric offset of the first element on a page
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: client suggested limit to restrict the number of entries on a
          page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "language code to prefer for document elements (en-US, fr ...)\
          \ page"
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventListResponse'
          description: Successully retrieved list of events.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: List Events
      tags:
      - Events
      x-openapi-router-controller: domains.events.controllers.get.controller
    post:
      operationId: add_event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        description: Add Event
        required: true
        x-body-name: event
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: event added
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Add Event
      tags:
      - Events
      x-openapi-router-controller: domains.events.controllers.post.controller
  /events/search:
    post:
      description: Searches events within the user's company.
      operationId: search_events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSearch'
        description: Search Event
        required: true
        x-body-name: search_query
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: results
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Search Events
      tags:
      - Events
      x-openapi-router-controller: domains.events.controllers.post.controller
  /events/{id}:
    delete:
      operationId: delete_event
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Event deleted
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Delete Event
      tags:
      - Events
      x-openapi-router-controller: domains.events.controllers.delete.controller
    get:
      operationId: get_event
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successfully retrieved Event
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Get Event
      tags:
      - Events
      x-openapi-router-controller: domains.events.controllers.get.controller
    patch:
      operationId: patch_event
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchDocument'
              type: array
        required: true
        x-body-name: patch_document_list
      responses:
        "204":
          description: Event patched
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Patch Event
      tags:
      - Events
      x-openapi-router-controller: domains.events.controllers.patch.controller
  /packages:
    get:
      operationId: list_packages
      parameters:
      - description: default query parameter
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: include the total count in the response
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: string
        style: form
      - description: The page to query from. This will take precedence over a limit
          and offset.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: "Fields to exclude {\"measurements\": 0} or only include {\"\
          measurements\": 1}"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "comma-separated list of fields to define the sort order. To\
          \ indicate sorting direction, may be prefixed with + (ascending) or - (descending),\
          \ e.g. /sales-orders?sort=+id"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: numeric offset of the first element on a page
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: client suggested limit to restrict the number of entries on a
          page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "language code to prefer for document elements (en-US, fr ...)\
          \ page"
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageListResponse'
          description: Successully retrieved list of packages.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: List Packages
      tags:
      - Packages
      x-openapi-router-controller: domains.packages.controllers.get.controller
    post:
      operationId: add_package
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Package'
        description: Add Package
        required: true
        x-body-name: package
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: package added
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Add Package
      tags:
      - Packages
      x-openapi-router-controller: domains.packages.controllers.post.controller
  /packages/{id}:
    delete:
      operationId: delete_package
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Package deleted
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Delete Package
      tags:
      - Packages
      x-openapi-router-controller: domains.packages.controllers.delete.controller
    get:
      operationId: get_package
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successfully retrieved Package
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Get Package
      tags:
      - Packages
      x-openapi-router-controller: domains.packages.controllers.get.controller
    patch:
      operationId: patch_package
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchDocument'
              type: array
        required: true
        x-body-name: patch_document_list
      responses:
        "204":
          description: Package patched
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Patch Package
      tags:
      - Packages
      x-openapi-router-controller: domains.packages.controllers.patch.controller
  /roles:
    get:
      operationId: list_roles
      parameters:
      - description: default query parameter
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: include the total count in the response
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: string
        style: form
      - description: The page to query from. This will take precedence over a limit
          and offset.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: "Fields to exclude {\"measurements\": 0} or only include {\"\
          measurements\": 1}"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "comma-separated list of fields to define the sort order. To\
          \ indicate sorting direction, may be prefixed with + (ascending) or - (descending),\
          \ e.g. /sales-orders?sort=+id"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: numeric offset of the first element on a page
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: client suggested limit to restrict the number of entries on a
          page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "language code to prefer for document elements (en-US, fr ...)\
          \ page"
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
          description: Successully retrieved list of roles.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: List Roles
      tags:
      - Roles
      x-openapi-router-controller: domains.roles.controllers.get.controller
    post:
      operationId: add_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        description: Add Role
        required: true
        x-body-name: role
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: role added
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Add Role
      tags:
      - Roles
      x-openapi-router-controller: domains.roles.controllers.post.controller
  /roles/{id}:
    delete:
      operationId: delete_role
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Role deleted
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Delete a role
      tags:
      - Roles
      x-openapi-router-controller: domains.roles.controllers.delete.controller
    patch:
      operationId: patch_role
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchDocument'
              type: array
        required: true
        x-body-name: patch_document_list
      responses:
        "204":
          description: Role patched
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Patch a role
      tags:
      - Roles
      x-openapi-router-controller: domains.roles.controllers.patch.controller
  /user/signup:
    post:
      operationId: signup_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUpRequest'
        x-body-name: employee
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponse'
          description: User signup successful!
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Signup Employee
      tags:
      - Employees
      x-openapi-router-controller: domains.employees.controllers.post.controller
  /users/profile/{id}:
    get:
      operationId: get_users_profile
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
          description: Successfully retrieved Employee profile
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: API rate limit exceeded.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Something is broken.
        "502":
          description: The cloud is down or being upgraded.
        "503":
          description: The cloud is up but overloaded with requests.
        "504":
          description: The cloud is up but there is a failure somewhere causing the
            request to fail.
      security:
      - bearerAuth: []
      summary: Get Employee Profile
      tags:
      - Employees
      x-openapi-router-controller: domains.employees.controllers.get.controller
components:
  parameters: {}
  schemas:
    AddResponse:
      description: Response to adding a new row containing the id.
      example:
        id: 1
      properties:
        id:
          title: id
          type: integer
      required:
      - id
      title: AddResponse
      type: object
    Clockin:
      example:
        user_id: 6
        clockin_time: clockin_time
        clockout_time: clockout_time
        id: 0
      properties:
        id:
          description: Unique identifier
          title: id
          type: integer
          x-primary-key: true
          x-autoincrement: true
        clockin_time:
          title: clockin_time
          type: string
        clockout_time:
          nullable: true
          title: clockout_time
          type: string
        user_id:
          title: user_id
          type: integer
          x-foreign-key: users.id
      required:
      - clockin_time
      title: Clockin
      type: object
      x-tablename: clockins
    Company:
      description: "A grouping of multiple departments, users, and events."
      example: |-
        {
            "zip_code": "zip_code",
            "phone": "phone",
            "city": "city",
            "name": "name",
            "about": "about",
            "address_street": "address_street",
            "id": "id",
            "state": "state"
            "img_url": "img_url"
        }
      properties:
        id:
          description: Unique identifier
          title: id
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          default: ""
          description: The name of the company.
          title: name
          type: string
        about:
          default: ""
          description: The company's about us.
          title: about
          type: string
        phone:
          default: ""
          description: organization phone
          title: phone
          type: string
        address_street:
          default: ""
          description: The street address of the company.
          title: address_street
          type: string
        city:
          default: ""
          description: The city in which the company is located.
          title: city
          type: string
        state:
          default: ""
          description: state
          title: state
          type: string
        zip_code:
          default: ""
          description: zipCode
          title: zip_code
          type: string
        img_url:
          default: ""
          description: Represents the url of the company's image.
          type: string
        private:
          default: false
          description: |
            Whether the company's events are queryable.
          type: boolean
      required:
      - name
      title: Company
      type: object
      x-tablename: companies
    Department:
      description: Subdivisions of companies.
      example: "{'department_name': 'Example', 'manager_id': 1, 'company_id': 2 }"
      properties:
        id:
          description: The id of the department.
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          description: Block of text containing the name of the department.
          type: string
        manager_id:
          description: An id representing the ID of the department manager.
          type: integer
          x-foreign-key: users.id
        company_id:
          description: The id representing the company the department is in.
          type: integer
          x-foreign-key: companies.id
      required:
      - name
      title: Department
      type: object
      x-tablename: departments
    Error:
      description: A single error message.
      example: |-
        {
            "code": "error.general.badGateway",
            "status": 502,
            "developerMessage": "Insitucloud is currently down.",
            "userMessage": "",
            "resolution": "Check the status page or try again later.",
            "moreInfo": "",
            "field": "",
            "errorId": "886313e1-3b8a-5372-9b90-0c9aee199e5d"
        }
      properties:
        code:
          description: A machine-readable unique identifier of the error. The code
            will never change and should be used to identify the specific error.
          type: string
        status:
          description: The HTTP status code. Included here for quick reference.
          format: int32
          type: integer
        developerMessage:
          description: A message to the developer about the error message. This may
            change at any time and should not be shown to the end user.
          type: string
        userMessage:
          description: A message that can be displayed to the end user. This may change
            at any time. You may want to check the error code and create a custom
            error message.
          type: string
        resolution:
          description: "A quick suggestion reguaring what to do next. If this does\
            \ not work, check out the page at \"moreInfo.\""
          type: string
        moreInfo:
          description: A link to a webpage with more information about the error.
          type: string
        field:
          description: "If the error relates to a specific field, this will show you\
            \ which field it is."
          type: string
        errorId:
          description: "A unique identifier that relates the error to our internal\
            \ logs. If you contact support, this should be included."
          type: string
      required:
      - code
      - status
      title: Root Type for ErrorMessage
      type: object
    ErrorListResponse:
      description: A list of error messages.
      example: "{'detail': 'The server encountered an unexpected error. Please try\
        \ again later.','status': 500,'suggestion': 'Please wait 5 minutes and re-attempt\
        \ your request.'}"
      properties:
        errors:
          description: List of all error messages.
          items:
            title: ErrorMessage
            type: object
          type: array
      required:
      - errors
      title: Root Type for ErrorListResponse
      type: object
    Event:
      description: Represents a type of event that can be created.
      example: "{'name': 'Example', 'description': 'Example description', 'agreed_price':\
        \ 'price', 'start_datetime': '203919174', 'end_datetime': '239829328', 'package_id':\
        \ 1, 'employee_id': 1, 'questions': [{'title': 'Example', 'value': '', 'values':\
        \ ['Test'], 'data_type': 'multiselect'}] }"
      properties:
        id:
          description: The identifier for the event.
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          default: ""
          description: name
          type: string
        description:
          default: ""
          description: Block of text describing the event.
          type: string
        agreed_price:
          default: 0
          description: The agreed upon price.
          type: number
        start_datetime:
          default: ""
          description: The start datetime.
          type: string
        end_datetime:
          default: ""
          description: The end datetime.
          type: string
        package_id:
          description: The ID of the package associated with this event.
          type: integer
          x-foreign-key: packages.id
        company_id:
          description: The ID of the company associated to the event.
          type: integer
          x-foreign-key: companies.id
        employee_id:
          description: The ID of the employee servicing the event.
          type: integer
          x-foreign-key: users.id
        questions:
          description: The questions to include in the event form.
          items:
            $ref: '#/components/schemas/PackageQuestion'
          type: array
          x-json: true
      required:
      - agreed_price
      - description
      - name
      - package_id
      - questions
      - start_datetime
      title: Event
      type: object
      x-tablename: events
    Package:
      description: Represents a type of event that can be created.
      example: "{'name': 'Example', 'description': 'Example description', 'img_url':\
        \ 'url', 'price': '15.00', 'companyId': 1, 'questions': [{'title': 'Example',\
        \ 'value': '', 'values': ['Test'], 'data_type': 'multiselect'}] }"
      properties:
        id:
          description: The identifier for the role.
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          default: ""
          description: name
          type: string
        description:
          default: ""
          description: Block of text describing the role.
          type: string
        img_url:
          default: ""
          description: The url to display the image tag.
          type: string
        price:
          default: 0
          description: "The price of the package, in USD."
          type: number
        company_id:
          description: The ID of the company created by.
          type: integer
          x-foreign-key: companies.id
        questions:
          description: The questions to include in the event form.
          items:
            $ref: '#/components/schemas/PackageQuestion'
          type: array
          x-json: true
      required:
      - description
      - name
      title: Package
      type: object
      x-tablename: packages
    PackageQuestion:
      description: Represents a question type to be included in a package.
      example: "{'title': 'Example', 'value': '', 'values': ['Test'], 'data_type':\
        \ 'multiselect'}"
      properties:
        title:
          description: Text that outlines the question.
          type: string
        value:
          description: The value stored by the question.
          type: string
        values:
          description: "The potential values, if any, of the question."
          items:
            type: string
          type: array
        data_type:
          description: The type of the question.
          type: string
      required:
      - data_type
      - title
      title: PackageQuestion
      type: object
    PatchDocument:
      description: A JSONPatch document as defined by RFC 6902.
      example: |-
        {
            "op": "replace",
            "path": "/name",
            "value": "Sample3"
        }
      properties:
        op:
          description: The operation to be performed
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          type: string
        path:
          description: A JSON-Pointer
          type: string
        value:
          description: The value to be used within the operations.
          type: string
        fromPath:
          description: A string containing a JSON Pointer value.
          type: string
      required:
      - op
      - path
      title: PatchDocument
      type: object
    Role:
      description: A single role.
      example: |-
        {
            "name": "Role1",
            "description": "Role1 description"
        }
      properties:
        id:
          description: The identifier for the role.
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          description: name
          type: string
        description:
          description: Block of text describing the role.
          type: string
        permissions:
          description: Permissions for role
          type: string
      required:
      - name
      - permissions
      title: Role
      type: object
      x-tablename: roles
    User:
      description: A single user.
      example: |-
        {
            "name": "User1",
            "description": "User1 description"
        }
      properties:
        id:
          description: A unique identifier for a user.
          type: integer
          x-primary-key: true
          x-autoincrement: true
        email:
          default: ""
          description: email
          type: string
        password:
          default: ""
          type: string
        first_name:
          default: ""
          description: The user's first name.
          type: string
        last_name:
          default: ""
          description: The user's last name.
          type: string
        pay_rate:
          default: 0
          description: The user's pay rate.
          type: number
        department_id:
          description: The user's department id.
          type: integer
          x-foreign-key: departments.id
        role:
          $ref: '#/components/schemas/Role'
        role_id:
          description: The user's role id.
          type: integer
          x-foreign-key: roles.id
      required:
      - email
      title: User
      type: object
      x-tablename: users
    UserCredentials:
      description: Request for user login.
      example:
        email: email
        password: password
      properties:
        email:
          description: The users email
          title: email
          type: string
        password:
          description: The users password
          title: password
          type: string
      required:
      - email
      - password
      title: UserCredentials
      type: object
      x-stoplight:
        id: f845495043fce
      x-examples: {}
    UserSignUpRequest:
      description: Request for user login.
      example:
        email: email
        password: password
      properties:
        email:
          description: The users email
          title: email
          type: string
        password:
          description: The users password
          title: password
          type: string
        first_name:
          type: string
        last_name:
          type: string
        role_id:
          type: integer
        pay_rate:
          type: number
      required:
      - email
      - first_name
      - last_name
      - password
      title: UserSignUpRequest
      type: object
      x-examples: {}
      x-stoplight:
        id: 27e737643aab6
    UserLoginResponse:
      description: Response on user login.
      example:
        accessToken: accessToken
      properties:
        accessToken:
          description: accessToken that can be passed as authorization for endpoints
          title: accessToken
          type: string
      required:
      - accessToken
      title: UserLoginResponse
      type: object
    UserValidationListResponse:
      description: A list of user validations.
      example:
        validations: []
      properties:
        validations:
          items:
            $ref: '#/components/schemas/UserValidation'
          title: data
          type: array
      required:
      - validations
      title: UserValidationListResponse
      type: object
      x-internal: false
      x-stoplight:
        id: 80c0d3cb1526b
    UserValidation:
      description: A user validation request object.
      properties:
        email:
          title: email
          type: string
        first_name:
          title: first_name
          type: string
        last_name:
          title: last_name
          type: string
        company_name:
          title: company_name
          type: string
        department_name:
          title: department_name
          type: string
        pay_rate:
          title: pay_rate
          type: number
        company_id:
          title: company_id
          type: integer
        department_id:
          title: department_id
          type: integer
        is_email_valid:
          title: is_name_valid
          type: boolean
        is_company_valid:
          title: is_company_valid
          type: boolean
        is_department_valid:
          title: is_department_valid
          type: boolean
        is_pay_rate_valid:
          title: is_pay_rate_valid
          type: boolean
        is_employee_valid:
          title: is_employee_valid
          type: boolean
      required:
      - company_name
      - department_name
      - first_name
      - last_name
      title: UserValidation
      type: object
    DepartmentListResponse:
      description: A response that contains data.
      example:
        departments: []
      properties:
        departments:
          items:
            $ref: '#/components/schemas/Department'
          title: data
          type: array
      required:
      - departments
      title: DepartmentListResponse
      type: object
    EventListResponse:
      description: A response that contains data.
      example:
        events: []
      properties:
        events:
          items:
            $ref: '#/components/schemas/Event'
          title: data
          type: array
      required:
      - events
      title: EventListResponse
      type: object
    ClockinListResponse:
      description: ""
      example:
        clockins:
        - user_id: 6
          clockin_time: clockin_time
          clockout_time: clockout_time
          id: 0
        - user_id: 6
          clockin_time: clockin_time
          clockout_time: clockout_time
          id: 0
      properties:
        clockins:
          items:
            $ref: '#/components/schemas/Clockin'
          title: clockins
          type: array
      title: ClockinListResponse
      type: object
      x-examples:
        Example 1:
          clockins: []
      x-stoplight:
        id: 50d55cda308fa
    CompanyListResponse:
      example:
        companies:
        - |-
          {
              "zip_code": "zip_code",
              "phone": "phone",
              "city": "city",
              "name": "name",
              "about": "about",
              "address_street": "address_street",
              "id": "id",
              "state": "state"
              "img_url": "img_url"
          }
        - |-
          {
              "zip_code": "zip_code",
              "phone": "phone",
              "city": "city",
              "name": "name",
              "about": "about",
              "address_street": "address_street",
              "id": "id",
              "state": "state"
              "img_url": "img_url"
          }
      properties:
        companies:
          items:
            $ref: '#/components/schemas/Company'
          title: companies
          type: array
      title: CompanyListResponse
      type: object
      x-examples:
        Example 1:
          companies: []
    PackageListResponse:
      example:
        packages:
        - "{'name': 'Example', 'description': 'Example description', 'img_url': 'url',\
          \ 'price': '15.00', 'companyId': 1, 'questions': [{'title': 'Example', 'value':\
          \ '', 'values': ['Test'], 'data_type': 'multiselect'}] }"
        - "{'name': 'Example', 'description': 'Example description', 'img_url': 'url',\
          \ 'price': '15.00', 'companyId': 1, 'questions': [{'title': 'Example', 'value':\
          \ '', 'values': ['Test'], 'data_type': 'multiselect'}] }"
      properties:
        packages:
          items:
            $ref: '#/components/schemas/Package'
          title: packages
          type: array
      title: PackageListResponse
      type: object
      x-examples:
        Example 1:
          packages: []
    UserListResponse:
      description: A response that contains data.
      example:
        users: []
      properties:
        users:
          items:
            $ref: '#/components/schemas/User'
          title: data
          type: array
      required:
      - users
      title: UserListResponse
      type: object
    RoleListResponse:
      description: A response that contains data.
      example:
        roles: []
      properties:
        roles:
          items:
            $ref: '#/components/schemas/Role'
          title: data
          type: array
      required:
      - roles
      title: RoleListResponse
      type: object
    EventSearch:
      description: Query to search events upcoming by a certain company.
      example:
        from_date: 01/01/2020
        to_date: 02/20/2022
        package_name: dj
      properties:
        from_date:
          description: The earliest date a result can take place at.
          type: string
        to_date:
          description: Represents the latest date a resultant event can be.
          type: string
        package_name:
          description: The name of the package.
          type: string
      required:
      - from_date
      - to_date
      title: EventSearch
      type: object
    UserProfile:
      additionalProperties: false
      example:
        role: |-
          {
              "name": "Role1",
              "description": "Role1 description"
          }
        department_id: 1
        role_id: 5
        last_name: last_name
        company: |-
          {
              "zip_code": "zip_code",
              "phone": "phone",
              "city": "city",
              "name": "name",
              "about": "about",
              "address_street": "address_street",
              "id": "id",
              "state": "state"
              "img_url": "img_url"
          }
        id: 0
        first_name: first_name
        pay_rate: 6.027456183070403
        email: email
      properties:
        id:
          title: id
          type: integer
        email:
          title: email
          type: string
        first_name:
          title: first_name
          type: string
        last_name:
          title: last_name
          type: string
        pay_rate:
          title: pay_rate
          type: number
        department_id:
          title: department_id
          type: integer
        role_id:
          title: role_id
          type: integer
        company:
          $ref: '#/components/schemas/Company'
        role:
          $ref: '#/components/schemas/Role'
      title: UserProfile
      type: object
      x-stoplight:
        id: b70697c9b7dd0
    UserProfileResponse:
      description: Response for UserProfile
      example:
        userProfile:
          role: |-
            {
                "name": "Role1",
                "description": "Role1 description"
            }
          department_id: 1
          role_id: 5
          last_name: last_name
          company: |-
            {
                "zip_code": "zip_code",
                "phone": "phone",
                "city": "city",
                "name": "name",
                "about": "about",
                "address_street": "address_street",
                "id": "id",
                "state": "state"
                "img_url": "img_url"
            }
          id: 0
          first_name: first_name
          pay_rate: 6.027456183070403
          email: email
      properties:
        userProfile:
          $ref: '#/components/schemas/UserProfile'
      title: UserProfileResponse
      type: object
      x-stoplight:
        id: ppl106rv0ilmq
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: crosscutting.auth.authentication.authenticate_user
x-stoplight:
  id: axwawz2nfz5ol
